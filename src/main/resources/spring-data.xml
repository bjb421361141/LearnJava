<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <context:property-placeholder
            location="classpath:conf/properties/redis.properties"/>

    <!-- jedis 配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="maxTotal" value="${redis.maxActive}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>


    <!-- Jedis ConnectionFactory -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="poolConfig"/>
        <property name="port" value="${redis.port}"/>
        <property name="hostName" value="${redis.host}"/>
        <property name="password" value="${redis.password}"/>
        <property name="timeout" value="${redis.timeout}"/>
    </bean>

    <bean id="stringRedisSerializer"
          class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    <bean id="jackson2JsonRedisSerializer"
          class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>

    <!-- redisTemplate -->
    <bean id="redisTemplate" name="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer" ref="stringRedisSerializer"/>
        <property name="valueSerializer" ref="stringRedisSerializer"/>
        <property name="hashKeySerializer" ref="stringRedisSerializer"/>
        <property name="hashValueSerializer" ref="jackson2JsonRedisSerializer"/>
        <!-- <property name="enableTransactionSupport" value="true"/> -->
    </bean>



    <!-- 配置缓存 -->
    <!--    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
            &lt;!&ndash; 配置RedisTemplate对象 &ndash;&gt;
            <constructor-arg ref="jdkredisTemplate"/>
        </bean>-->

    <!-- 配置消息队列 -->
    <!--<bean id="topicContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer"
          destroy-method="destroy">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="messageListeners">
            <map>
                <entry key-ref="sub">
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="dddchannel"/>
                    </bean>
                </entry>
                <entry key-ref="sub2">
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="dddchannel"/>
                    </bean>
                </entry>
                <entry key-ref="sub3">
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="cccchannel"/>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>-->
</beans>
